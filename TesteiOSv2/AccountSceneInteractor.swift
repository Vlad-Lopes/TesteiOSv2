//
//  AccountSceneInteractor.swift
//  TesteiOSv2
//
//  Created by Vlad Lopes on 14/02/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AccountSceneBusinessLogic
{
  func doSomething(request: AccountScene.Something.Request)
    func requestClient(request: GetClient.Request)
    func requestStatements(request: AccountScene.Statements.Request)
}

protocol AccountSceneDataStore
{
    var name: String { get set }
    var bankAccount: String { get set }
    var balance: String { get set }
}

class AccountSceneInteractor: AccountSceneBusinessLogic, AccountSceneDataStore
{
    
  var presenter: AccountScenePresentationLogic?
  var worker: AccountSceneWorker?
    var name: String = ""
    var bankAccount: String = ""
    var balance: String = ""
  
    
   
  // MARK: Do something
  
  func doSomething(request: AccountScene.Something.Request)
  {
    worker = AccountSceneWorker()
    worker?.doSomeWork()
    print(name, bankAccount, balance)
//    let response = AccountScene.Something.Response()
//    presenter?.presentClient(response: response)
  }
    
    func requestClient(request: GetClient.Request) {
        let response = GetClient.Response.init(client: request.client)
        presenter?.presentClient(response: response)
    }
   
    func requestStatements(request: AccountScene.Statements.Request) {
        let statementWorker = RequestStatementsWorker()
        let response = statementWorker.requestStatements(id: request.id)
        { (response) -> () in
            if (response != nil)  {
                response
            }
        
            let response = AccountScene.Statements.Response.init(statements: response!)
            self.presenter?.presentStatements(response: response)
        }
    }
//    func presentStatements(response: AccountScene.Statements.Response) {
//        presenter?.presentStatements(response: response)
//    }
    
}
